--------------------------------------------------------------------
-- This query calculates reflagging statistics for each flag.
-- Each hull (based on vessel_record_id) is classified as either 
-- flagging or non-flagging based on if that hull has a any recorded
-- reflagging events between distinct flags.
--
-- Last updated: 2021-08-19
--------------------------------------------------------------------

WITH 

-----------------------------------------------------------------------------------
-- Gather instances of reflagging by checking when flag_in is different
-- than flag out OR when flag_out is NULL and then count by flag_in.
-- Every state of a hull is tracked, including it's current or end state
-- (rows where flag_out is NULL) so when flag_out is NULL, we're capturing
-- the final reflagging of the vessel. This also means that we only need to use 
-- flag_in to quantify reflagging by flag.
-- Also, only hulls that reflag at least once are included in the reflagging_table. 
-- WARNING: If that changes, this query will not properly count reflagging.
-----------------------------------------------------------------------------------
reflag_count AS (
    SELECT 
    flag_in as flag,
    COUNT(DISTINCT vessel_record_id) as hulls_reflagged,
    FROM `{{PROJECT}}.{{REFLAGGING_TABLE}}{{VERSION}}`
    WHERE flag_in IS NOT NULL
    AND (flag_in != flag_out OR flag_out IS NULL)
    GROUP BY flag_in
),

-----------------------------------------------------------------------------------
-- For each flag, count the number of hulls that are in the identity table
-- but not in the reflagging table, meaning that they have never reflagged in our
-- dataset.
-----------------------------------------------------------------------------------
no_reflag_count AS (
    SELECT
    flag,
    COUNT(DISTINCT vessel_record_id) AS hulls_not_reflagged
    FROM `{{PROJECT}}.{{IDENTITY_TABLE}}{{VERSION}}`
    WHERE vessel_record_id NOT IN (SELECT DISTINCT vessel_record_id FROM `{{PROJECT}}.{{REFLAGGING_TABLE}}{{VERSION}}`)
    GROUP BY flag
),

-----------------------------------------------------------------------------------
-- For each flag, count the total number of distinct hulls in the identity dataset.
-- This count is only used for QA to make sure the following for each flag:
-- hulls_reflagged + hulls_not_reflagged = hulls_total_id_table
-----------------------------------------------------------------------------------
total_count AS (
    SELECT
    flag,
    COUNT(DISTINCT vessel_record_id) AS hulls_total_id_table
    FROM `{{PROJECT}}.{{IDENTITY_TABLE}}{{VERSION}}`
    GROUP BY flag    
)

-----------------------------------------------------------------------------------
-- Return all of the features along with a normalized version of hulls_reflagged 
-- and hull_not_reflagged. These counts are normalized by 
--
-- QA MEASURE: Check that hulls_total == hulls_total_id_table after version updates
-- by uncommenting the WHERE clause and running. If any rows are returned, 
-- they represent a flag where the counts do not add up and should be investigated.
-----------------------------------------------------------------------------------
SELECT 
flag,
hulls_reflagged,
hulls_not_reflagged,
hulls_total_id_table,
hulls_reflagged + hulls_not_reflagged AS hulls_total,
hulls_reflagged/(hulls_reflagged + hulls_not_reflagged) AS norm_reflag,
hulls_not_reflagged/(hulls_reflagged + hulls_not_reflagged) AS norm_not_reflag
FROM (
    SELECT
    flag,
    IFNULL(hulls_reflagged, 0) as hulls_reflagged,
    IFNULL(hulls_not_reflagged, 0) AS hulls_not_reflagged,
    IFNULL(hulls_total_id_table, 0) AS hulls_total_id_table,
    FROM reflag_count 
    LEFT JOIN no_reflag_count USING(flag)
    LEFT JOIN total_count USING(flag)
)
-- WHERE hulls_total_id_table != (IFNULL(hulls_reflagged, 0) + IFNULL(hulls_not_reflagged, 0))
ORDER BY norm_reflag DESC